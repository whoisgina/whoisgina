:root {
  --background: #f4f4f4;
  --foreground: #454545;
  --gray-light: #808080;
  --white: #ffffff;
}

html {
  font-size: 65.25%;
}

body {
  font-family: 'Work Sans', sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  background-color: var(--white);
  color: var(--foreground);
  line-height: 1.5;
}

a {
  background-image: linear-gradient(120deg, #fcba03 0%, yellow 100%);
  background-position: 0 3.6rem;
  background-repeat: no-repeat;
  background-size: 100%;
  color: inherit;
  cursor: pointer;
  line-height: 1.15;
  overflow: hidden;
  text-decoration: none;
  text-decoration: none;
  transition: all 150ms ease-in-out;

  &:hover {
    background-position: 0 0.65em;
  }
}

a:hover {
  background-position: 0 3.5rem;
}

.content {
  background: var(--white);
}

.content p {
  margin-bottom: 3rem;
}

.content p:last-of-type {
  margin-bottom: 0;
}

.content ul {
  margin-bottom: 3rem;
}


@media only screen and (max-width: 600px) {
  .content {
    font-size: 6vw;
    padding: 5vw;
  }
}

@media only screen and (min-width: 600px) {
  .content {
    font-size: 2.5vw;
    padding: 5vw;
    margin-bottom: 5rem;
    box-shadow: -5px 5px 6px rgba(0, 0, 0, 0.1);
  }

  body {
    padding: 5vw;
    background-image: url('https://raw.githubusercontent.com/whoisgina/whoisgina/master/assets/bg.gif');
    background-repeat: repeat;
  }
}

/**
 * copy
 */

.copy > * {
  margin-bottom: 2.7rem;
  margin-top: 2.7rem;
}

.copy > *:first-child { margin-top: 0 }
.copy > *:last-child { margin-bottom: 0 }

.copy a {
  text-decoration: underline;
}

.copy figure {
  margin: 0;
}

.copy ul, .copy li {
  list-style: disc;
}

.copy li {
  margin-left: 2rem;
}

.copy-width > *:not(figure) {
  max-width: 55rem;
}

/**
 * lists
 */

.comma-item:not(:last-child):after {
  content: ', ';
}

/**
 * not found
 */

.notfound {
  display: flex;
  align-items: center;
  justify-content: center;
  height: calc(100vh - 8rem);
  width: 100vw;
}

/**
 * loading
 */

.loading {
  --radius: 1rem;
  margin: calc(var(--radius) * -1);
  height: calc(var(--radius) * 2);
  width: calc(var(--radius) * 2);
  border-radius: 50rem;
  position: fixed;
  top: 50%;
  left: 50%;
  border: 3px solid var(--foreground);
  border-top: 3px solid var(--background);
  border-left: 3px solid var(--background);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg) }
  100% { transform: rotate(360deg) }
}
